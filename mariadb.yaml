apiVersion: v1
data:
  mysql-password: MTIzc3F3ZXJ0IQ==
  mysql-root-password: MTIzc3F3ZXJ0IQ==
kind: Secret
metadata:
  labels:
    wow: mysql
  name: mysql
  namespace: wow
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    wow: mysql
  name: wow-mysql
  namespace: wow
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
data:
  my.cnf: |
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    max_allowed_packet=256M
    bind-address=0.0.0.0
    character-set-server=UTF8
    collation-server=utf8_general_ci
    net_read_timeout=30
    net_write_timeout=30
    connect_timeout=630
    interactive_timeout=630
    innodb_buffer_pool_size=1024M
    query_cache_size=64M
    log_error=/var/log/mysql/mysql_error.log
    general_log_file=/var/log/mysql/mysql.log
    general_log=1
    slow_query_log_file=/var/log/mysql/mysql-slow.log
    long_query_time=2
    log-queries-not-using-indexes

    [client]
    port=3306
    
kind: ConfigMap
metadata:
  name: config-mysql
  namespace: wow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    wow: mysql
  name: mysql
  namespace: wow
spec:
  replicas: 1
  selector:
    matchLabels:
      wow: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        wow: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-root-password
              name: mysql
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-password
              name: mysql
              optional: true
        - name: MYSQL_USER
        - name: MYSQL_DATABASE
        image: mysql:5.7.28
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
        - mountPath: /etc/mysql/mysql.conf.d
          name: config
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - rm
        - -fr
        - /var/lib/mysql/lost+found
        image: busybox:1.29.3
        imagePullPolicy: IfNotPresent
        name: remove-lost-found
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: wow-mysql
      - configMap:
          defaultMode: 420
          name: config-mysql
        name: config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    wow: db-mysql
  name: db
  namespace: wow
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    wow: mysql
